//@f_f_jion
//fahimfoysaljion456@gmail.com


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>


#define MAX_MOVIES 100
#define MAX_TITLE_LENGTH 100
#define MAX_DIRECTOR_LENGTH 100


typedef struct {
    char title[MAX_TITLE_LENGTH];
    int year;
    char director[MAX_DIRECTOR_LENGTH];
} Movie;


Movie movies[MAX_MOVIES];
int movieCount = 0;


void addMovie();
void displayMovies();
void searchMovieByTitle();
void deleteMovie();
void editMovie();
void findMoviesByDirector();
void findMoviesByYear();
void countMovies();


int isValidName(const char *str);
int isValidYear(const char *str);


int main() {
    int choice;


    while (1) {
        printf("\nMovie Management System\n");
        printf("1. Add Movie\n");
        printf("2. Display Movies\n");
        printf("3. Search by Title\n");
        printf("4. Delete Movie\n");
        printf("5. Edit Movie\n");
        printf("6. Find Movies by Director\n");
        printf("7. Find Movies by Year\n");
        printf("8. Count Movies\n");
        printf("Enter your choice: ");
        
        scanf("%d", &choice);
        getchar();


        switch (choice) {
            case 1:
                addMovie();
                break;
            case 2:
                displayMovies();
                break;
            case 3:
                searchMovieByTitle();
                break;
            case 4:
                deleteMovie();
                break;
            case 5:
                editMovie();
                break;
            case 6:
                findMoviesByDirector();
                break;
            case 7:
                findMoviesByYear();
                break; 
             case 8:
                countMovies();
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
    return 0;
}


int isValidName(const char *str) {
    if (strlen(str) == 0) return 0;


    for (int i = 0; str[i] != '\0'; i++) {
        if (!isalpha(str[i]) && !isspace(str[i])) {
            return 0;
        }
    }
    return 1;
}


int isValidYear(const char *str) {
    if (strlen(str) == 0) return 0;


    for (int i = 0; str[i] != '\0'; i++) {
        if (!isdigit(str[i])) {
            return 0;
        }
    }
    return 1;
}


void getInput(const char *prompt, char *buffer, int maxLength, int (*validationFunction)(const char *)) {
    while (1) {
        printf("%s", prompt);
        fgets(buffer, maxLength, stdin);
        buffer[strcspn(buffer, "\n")] = 0;
        
        char *start = buffer;
        while (isspace(*start)) start++;
        if (strlen(start) == 0) {
            printf("Error: Input cannot be just spaces or empty. Please try again.\n");
            continue;
        }


        if (validationFunction(start)) {
            strcpy(buffer, start);
            break;
        } else {
            printf("Error: Invalid input. Please try again.\n");
        }
    }
}


void getYearInput(const char *prompt, int *year) {
    char temp[10];
    while (1) {
        printf("%s", prompt);
        fgets(temp, sizeof(temp), stdin);
        temp[strcspn(temp, "\n")] = 0;


        if (isValidYear(temp)) {
            *year = atoi(temp);
            break;
        } else {
            printf("Error: Year should only contain digits and cannot be just spaces.\n");
        }
    }
}


void addMovie() {
    if (movieCount >= MAX_MOVIES) {
        printf("Movie list is full.\n");
        return;
    }


    getInput("Enter movie title: ", movies[movieCount].title, MAX_TITLE_LENGTH, isValidName);
    getYearInput("Enter release year: ", &movies[movieCount].year);
    getInput("Enter director's name: ", movies[movieCount].director, MAX_DIRECTOR_LENGTH, isValidName);


    movieCount++;
    printf("Movie added successfully!\n");
}


void displayMovies() {
    if (movieCount == 0) {
        printf("No movies to display.\n");
        return;
    }


    printf("\nList of Movies:\n");
    for (int i = 0; i < movieCount; i++) {
        printf("Movie %d:\n", i + 1);
        printf("Title: %s\n", movies[i].title);
        printf("Year: %d\n", movies[i].year);
        printf("Director: %s\n", movies[i].director);
    }
}


void searchMovieByTitle() {
    char title[MAX_TITLE_LENGTH];
    getInput("Enter the title of the movie to search: ", title, MAX_TITLE_LENGTH, isValidName);


    for (int i = 0; i < movieCount; i++) {
        if (strcasecmp(movies[i].title, title) == 0) {
            printf("Movie Found:\n");
            printf("Title: %s\n", movies[i].title);
            printf("Year: %d\n", movies[i].year);
            printf("Director: %s\n", movies[i].director);
            return;
        }
    }
    printf("Movie not found.\n");
}


void deleteMovie() {
    char title[MAX_TITLE_LENGTH];
    getInput("Enter the title of the movie to delete: ", title, MAX_TITLE_LENGTH, isValidName);


    for (int i = 0; i < movieCount; i++) {
        if (strcasecmp(movies[i].title, title) == 0) {
            for (int j = i; j < movieCount - 1; j++) {
                movies[j] = movies[j + 1];
            }
            movieCount--;
            printf("Movie deleted successfully!\n");
            return;
        }
    }
    printf("Movie not found.\n");
}


void editMovie() {
    char title[MAX_TITLE_LENGTH];
    getInput("Enter the title of the movie to edit: ", title, MAX_TITLE_LENGTH, isValidName);


    for (int i = 0; i < movieCount; i++) {
        if (strcasecmp(movies[i].title, title) == 0) {
            printf("Editing Movie: %s\n", movies[i].title);
            getInput("Enter new title: ", movies[i].title, MAX_TITLE_LENGTH, isValidName);
            getYearInput("Enter new release year: ", &movies[i].year);
            getInput("Enter new director's name: ", movies[i].director, MAX_DIRECTOR_LENGTH, isValidName);
            printf("Movie edited successfully!\n");
            return;
        }
    }
    printf("Movie not found.\n");
}


void countMovies() {
    printf("Total number of movies: %d\n", movieCount);
}


void findMoviesByDirector() {
    char director[MAX_DIRECTOR_LENGTH];
    getInput("Enter the director's name to search for: ", director, MAX_DIRECTOR_LENGTH, isValidName);


    int found = 0;
    for (int i = 0; i < movieCount; i++) {
        if (strcasecmp(movies[i].director, director) == 0) {
            if (!found) {
                printf("\nMovies directed by %s:\n", director);
                found = 1;
            }
            printf("Title: %s, Year: %d\n", movies[i].title, movies[i].year);
        }
    }
    if (!found) {
        printf("No movies found for director %s.\n", director);
    }
}


void findMoviesByYear() {
    int year;
    getYearInput("Enter the year to search for: ", &year);


    int found = 0;
    for (int i = 0; i < movieCount; i++) {
        if (movies[i].year == year) {
            if (!found) {
                printf("\nMovies released in %d:\n", year);
                found = 1;
            }
            printf("Title: %s, Director: %s\n", movies[i].title, movies[i].director);
        }
    }
    if (!found) {
        printf("No movies found for the year %d.\n", year);
    }
}